PS C:\Users\NursingIT\Desktop> Get-CimInstance -Namespace "root\standardcimv2\embedded" -ClassName "WESL_UserSetting" | Format-List


CustomReturnCodes       :
CustomReturnCodesAction :
DefaultAction           :
Shell                   : cmd.exe
Sid                     : S-1-5-21-786743719-591829700-1355714916-1006
PSComputerName          :



PS C:\Users\NursingIT\Desktop>


Get-CimInstance -Namespace "root\standardcimv2\embedded" -ClassName "WESL_UserSetting" | Format-List



$namespace = "root\standardcimv2\embedded"
$sid = "YOUR_SID_HERE"  # Example: S-1-5-21-786743719-591829700-1355714916-1006
$shellPath = "cmd.exe"

$instance = Get-CimInstance -Namespace $namespace -ClassName WESL_UserSetting | Where-Object { $_.SID -eq $sid }

if (-not $instance) {
    New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Property @{
        SID = $sid
        Shell = $shellPath
    }
} else {
    Set-CimInstance -InputObject $instance -Property @{
        Shell = $shellPath
    }
}






PS C:\WINDOWS\system32> dism /online /enable-feature /featurename:Client-DeviceLockdown /all
>>
>>

Deployment Image Servicing and Management tool
Version: 10.0.26100.1150

Image Version: 10.0.26100.4061

Enabling feature(s)
[==========================100.0%==========================]
The operation completed successfully.
PS C:\WINDOWS\system32>





dism /online /enable-feature /featurename:Client-DeviceLockdown /all




PS C:\WINDOWS\system32> Get-WindowsOptionalFeature -Online -FeatureName Client-EmbeddedShellLauncher


FeatureName      : Client-EmbeddedShellLauncher
DisplayName      : Shell Launcher
Description      : Launches an alternate shell instead of the default Windows shell
RestartRequired  : Possible
State            : Enabled
CustomProperties :




PS C:\WINDOWS\system32>



Get-WindowsOptionalFeature -Online -FeatureName Client-EmbeddedShellLauncher

$namespace = "root\standardcimv2\embedded"
$class = "WESL_UserSetting"
$sid = "S-1-5-21-786743719-591829700-1355714916-1006"

$instance = Get-CimInstance -Namespace $namespace -ClassName $class | Where-Object { $_.SID -eq $sid }


Set-CimInstance -InputObject $instance -Property @{ Shell = "cmd.exe" }




PS C:\WINDOWS\system32> Set-CimInstance -Namespace "root\standardcimv2\embedded" -ClassName "WESL_UserSetting" `
>>   -Filter "SID='S-1-5-21-786743719-591829700-1355714916-1006'" `
>>   -Property @{ Shell = "cmd.exe" }
Set-CimInstance : A parameter cannot be found that matches parameter name 'ClassName'.
At line:1 char:58
+ ... mInstance -Namespace "root\standardcimv2\embedded" -ClassName "WESL_U ...
+                                                        ~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Set-CimInstance], ParameterBindingException
    + FullyQualifiedErrorId : NamedParameterNotFound,Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceComm
   and

PS C:\WINDOWS\system32>



Set-CimInstance -Namespace "root\standardcimv2\embedded" -ClassName "WESL_UserSetting" `
  -Filter "SID='S-1-5-21-786743719-591829700-1355714916-1006'" `
  -Property @{ Shell = "cmd.exe" }




PS C:\WINDOWS\system32> Shell ="cmd.exe"
Shell : The term 'Shell' is not recognized as the name of a cmdlet, function, script file, or operable program. Check
the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ Shell ="cmd.exe"
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (Shell:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException




PS C:\WINDOWS\system32> Get-WindowsOptionalFeature -Online -FeatureName Client-EmbeddedShellLauncher


FeatureName      : Client-EmbeddedShellLauncher
DisplayName      : Shell Launcher
Description      : Launches an alternate shell instead of the default Windows shell
RestartRequired  : Possible
State            : Enabled
CustomProperties :




PS C:\WINDOWS\system32>


Get-WindowsOptionalFeature -Online -FeatureName Client-EmbeddedShellLauncher


Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

PS C:\WINDOWS\system32> whoami/user
whoami/user : The term 'whoami/user' is not recognized as the name of a cmdlet, function, script file, or operable
program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ whoami/user
+ ~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (whoami/user:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\WINDOWS\system32>




PS C:\Users\NursingIT\Desktop> .\Chrome_Kiosk.ps1


CustomReturnCodes       :
CustomReturnCodesAction :
DefaultAction           :
Shell                   : C:\Program Files\Google\Chrome\Application\chrome.exe --kiosk https://www.google.com
Sid                     : S-1-5-21-786743719-591829700-1355714916-1006
PSComputerName          :



PS C:\Users\NursingIT\Desktop>


dism /online /enable-feature /featurename:Client-DeviceLockdown /All


PS C:\Users\NursingIT\Desktop> dism /online /enable-feature /featurename:Client-EmbeddedShellLauncher

Deployment Image Servicing and Management tool
Version: 10.0.26100.1150

Image Version: 10.0.26100.4061

Enabling feature(s)
[==========================100.0%==========================]

Error: 50

The operation is complete but Client-EmbeddedShellLauncher feature was not enabled.
A required parent feature may not be enabled. You can use the /enable-feature /all option to automatically enable each parent feature from the following list. If the parent feature(s) are already enabled, refer to the log file for further diagnostics.
Client-DeviceLockdown

The DISM log file can be found at




dism /online /enable-feature /featurename:Client-EmbeddedShellLauncher


The DISM log file can be found at C:\WINDOWS\Logs\DISM\dism.log
PS C:\Users\NursingIT\Desktop> dism /online /get-features | findstr Embedded
Feature Name : Client-EmbeddedShellLauncher
Feature Name : Client-EmbeddedBootExp
Feature Name : Client-EmbeddedLogon
PS C:\Users\NursingIT\Desktop>





dism /online /get-features | findstr Embedded






dism /online /enable-feature /featurename:EmbeddedMode /All

PS C:\Users\NursingIT\Desktop> dism /online /enable-feature /featurename:EmbeddedMode /All

Deployment Image Servicing and Management tool
Version: 10.0.26100.1150

Image Version: 10.0.26100.4061


Error: 0x800f080c

Feature name EmbeddedMode is unknown.
A Windows feature name was not recognized.
Use the /Get-Features option to find the name of the feature in the image and try the command again.

The DISM log file can be found at C:\WINDOWS\Logs\DISM\dism.log
PS C:\Users\NursingIT\Desktop>





dism /online /enable-feature /featurename:Client-EmbeddedShellLauncher


PS C:\Users\NursingIT\Desktop> ^C
PS C:\Users\NursingIT\Desktop> Enable-WindowsOptionalFeature -FeatureName Client-EmbeddedShellLauncher -Online
Enable-WindowsOptionalFeature : One or several parent features are disabled so current feature can not be enabled.
At line:1 char:1
+ Enable-WindowsOptionalFeature -FeatureName Client-EmbeddedShellLaunch ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Enable-WindowsOptionalFeature], COMException
    + FullyQualifiedErrorId : Microsoft.Dism.Commands.EnableWindowsOptionalFeatureCommand




Enable-WindowsOptionalFeature -FeatureName Client-EmbeddedShellLauncher -Online


PS C:\Users\NursingIT\Desktop> .\Chrome_Kiosk.ps1
Get-CimInstance : Invalid class
At C:\Users\NursingIT\Desktop\Chrome_Kiosk.ps1:5 char:13
+ $instance = Get-CimInstance -Namespace $namespace -ClassName WESL_Use ...
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : MetadataError: (root\standardci...ESL_UserSetting:String) [Get-CimInstance], CimExceptio
   n
    + FullyQualifiedErrorId : HRESULT 0x80041010,Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand

New-CimInstance : Invalid class
At C:\Users\NursingIT\Desktop\Chrome_Kiosk.ps1:8 char:5
+     New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : MetadataError: (WESL_UserSetting:CimInstance) [New-CimInstance], CimException
    + FullyQualifiedErrorId : HRESULT 0x80041010,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand

PS C:\Users\NursingIT\Desktop> ^C




$namespace = "root\standardcimv2\embedded"
$sid = "<insert actual SID>"
$chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe --kiosk https://www.google.com"

$instance = Get-CimInstance -Namespace $namespace -ClassName WESL_UserSetting | Where-Object {$_.SID -eq $sid}

if (-not $instance) {
    New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Property @{
        SID = $sid
        Shell = $chromePath
    }
} else {
    Set-CimInstance -InputObject $instance -Property @{
        Shell = $chromePath
    }
}


Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass




$namespace = "root\standardcimv2\embedded"
$user = "KioskUser"
$chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe"
$args = "--kiosk https://www.google.com"

New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Property @{
    User = $user
    Shell = $chromePath
    CustomShellArguments = $args
}




$namespace = "root\standardcimv2\embedded"
$class = "WESL_UserSetting"
$sid = "S-1-5-21-1945958628-710632427-257284811-1001"

$instance = Get-CimInstance -Namespace $namespace -ClassName $class | Where-Object {$_.SID -eq $sid}

$chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe --kiosk https://www.google.com"

if(-not $instance)
{
    New-CimInstance -Namespace $namespace -ClassName $class -Property @{
        SID = $sid
        Shell = $chromePath
        
    }

}
else {

    Set-CimInstance -InputObject $instance -Property @{
        Shell = $chromePath
        
    }
}




$namespace = "root\standardcimv2\embedded"
$class = Get-CimClass -Namespace $namespace -ClassName WESL_UserSetting

$user = "KioskUser"
$chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe"
$args = "--kiosk https://www.google.com"

New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Property @{
    User = $user
    Shell = $chromePath
    Arguments = $args
}



PS C:\WINDOWS\system32> $namespace = "root\standardcimv2\embedded"
>> $class = Get-CimClass -Namespace $namespace -ClassName WESL_UserSetting
>>
>> $user = "KioskUser"
>> $chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe"
>> $args = "--kiosk https://www.google.com"
>>
>> New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Property @{
>>     User = $user
>>     Shell = $chromePath
>>     AccountName = $args
>> }
New-CimInstance : Invalid property "AccountName"
At line:8 char:1
+ New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Pr ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (WESL_UserSetting:CimInstance) [New-CimInstance], CimException
    + FullyQualifiedErrorId : HRESULT 0x80041002,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand

PS C:\WINDOWS\system32>





PS C:\WINDOWS\system32> $namespace = "root\standardcimv2\embedded"
>> $class = Get-CimClass -Namespace $namespace -ClassName WESL_UserSetting
>>
>> $user = "KioskUser"
>> $chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe"
>> $args = "--kiosk https://www.google.com"
>>
>> New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Property @{
>>     User = $user
>>     Shell = $chromePath
>>     CustomShellArguments = $args
>> }
>>
New-CimInstance : Invalid property "User"
At line:8 char:1
+ New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Pr ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (WESL_UserSetting:CimInstance) [New-CimInstance], CimException
    + FullyQualifiedErrorId : HRESULT 0x80041002,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand




$namespace = "root\standardcimv2\embedded"
$class = Get-CimClass -Namespace $namespace -ClassName WESL_UserSetting

$user = "KioskUser"
$chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe"
$args = "--kiosk https://www.google.com"

New-CimInstance -Namespace $namespace -ClassName WESL_UserSetting -Property @{
    User = $user
    Shell = $chromePath
    CustomShellArguments = $args
}




PS C:\WINDOWS\system32> Enable-WindowsOptionalFeature -FeatureName Client-EmbeddedShellLauncher -Online


Path          :
Online        : True
RestartNeeded : False



PS C:\WINDOWS\system32>



PS C:\Users\NursingIT\Desktop> .\SetKiosk.ps1
Set-AssignedAccess : A parameter cannot be found that matches parameter name 'AppPath'.
At C:\Users\NursingIT\Desktop\SetKiosk.ps1:2 char:3
+   -AppPath "C:\Program Files\Google\Chrome\Application\chrome.exe" `
+   ~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Set-AssignedAccess], ParameterBindingException
    + FullyQualifiedErrorId : NamedParameterNotFound,Set-AssignedAccess



Set-AssignedAccess -UserName "KioskUser" `
  -AppPath "C:\Program Files\Google\Chrome\Application\chrome.exe" `
  -AppArguments "--kiosk https://www.google.com"

PS C:\WINDOWS\system32> net user KioskUser 1NURSIT4all!te /add
The password does not meet the password policy requirements. Check the minimum password length, password complexity and password history requirements.

More help is available by typing NET HELPMSG 2245.

PS C:\WINDOWS\system32> NET HELPMSG 2245

The password does not meet the password policy requirements. Check the minimum password length, password complexity and password history requirements.




257284811-1001")
PS C:\Users\NursingIT> $objUser = $objSID.Translate([System.Security.Principal.NTAccount])
PS C:\Users\NursingIT> $objUser.Value
NURS-A1-6ZZK5Y2\NursingIT
PS C:\Users\NursingIT> Test-Path "C:\Program Files\Google\Chrome\Application\chrome.exe"
True
PS C:\Users\NursingIT> net localgroup administrators
Alias name     administrators
Comment        Adding CON_CM and CON_TM

Members

-------------------------------------------------------------------------------
Administrator
NursingIT
The command completed successfully.

PS C:\Users\NursingIT>


$objSID = New-Object System.Security.Principal.SecurityIdentifier("S-1-5-21-1945958628-710632427-257284811-1001")
$objUser = $objSID.Translate([System.Security.Principal.NTAccount])
$objUser.Value



PS C:\Users\NursingIT> Remove-AssignedAccess -UserName "NursingIT"
Remove-AssignedAccess : The term 'Remove-AssignedAccess' is not recognized as the name of a cmdlet, function, script
file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct
and try again.
At line:1 char:1
+ Remove-AssignedAccess -UserName "NursingIT"
+ ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Remove-AssignedAccess:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\NursingIT>

Remove-AssignedAccess -UserName "NursingIT"

Test-Path "C:\Program Files\Google\Chrome\Application\chrome.exe"

$objSID = New-Object System.Security.Principal.SecurityIdentifier("S-1-5-21-1945958628-710632427-257284811-1001")
$objUser = $objSID.Translate([System.Security.Principal.NTAccount])
$objUser.Value


CustomReturnCodes       :
CustomReturnCodesAction :
DefaultAction           :
Shell                   : C:\Program Files\Google\Chrome\Application\chrome.exe --kiosk
                          https://www.google.com
Sid                     : S-1-5-21-1945958628-710632427-257284811-1001
PSComputerName          :



PS C:\WINDOWS\system32>



PS C:\Users\NursingIT> Get-LocalUser | Select Name, SID

Name               SID
----               ---
Administrator      S-1-5-21-1945958628-710632427-257284811-500
DefaultAccount     S-1-5-21-1945958628-710632427-257284811-503
Guest              S-1-5-21-1945958628-710632427-257284811-501
NursingIT          S-1-5-21-1945958628-710632427-257284811-1001
WDAGUtilityAccount S-1-5-21-1945958628-710632427-257284811-504

$namespace = "root\standardcimv2\embedded"
$class = "WESL_UserSetting"
$sid = "S-1-5-21-1945958628-710632427-257284811-1001"

$instance = Get-CimInstance -Namespace $namespace -ClassName $class | Where-Object {$_.SID -eq $sid}

if(-not $instance)
{
    New-CimInstance -Namespace $namespace -ClassName $class -Property
    @{
        SID = $sid
        Shell = "C:\Program Files\Google\Chrome\Application\chrome.exe"
        Parameters = "--kiosk https://www.google.com"
        DefaultReturnCodeAction = 0
    }

}
else {

    Set-CimInstance -InputObject $instance -Property
    @{
        Shell = "C:\Program Files\Google\Chrome\Application\chrome.exe"
        Parameters = "--kiosk https://www.google.com"
        DefaultReturnCodeAction = 0
    }
}


New-CimInstance : A parameter cannot be found that matches parameter name 'Property@'.
At line:9 char:61
+ ...   New-CimInstance -Namespace $namespace -ClassName $class -Property@{
+                                                               ~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [New-CimInstance], ParameterBindingException
    + FullyQualifiedErrorId : NamedParameterNotFound,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceComm
   and



New-CimInstance : Invalid property "Parameters"
At line:9 char:5
+     New-CimInstance -Namespace $namespace -ClassName $class -Property ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (WESL_UserSetting:CimInstance) [New-CimInstance], CimException
    + FullyQualifiedErrorId : HRESULT 0x80041002,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand

